{"version":3,"sources":["js/view.js","js/caesar.js","js/index.js"],"names":["bottomBg","document","querySelector","screenWidth","window","outerWidth","setAttribute","caesar","input","rot","TypeError","length","Error","console","log","inputArray","isUpperCase","isChar","result","forEach","char","toUpperCase","match","newChar","findNewChar","push","join","alphabet","idx","indexOf","toLowerCase","module","exports","bodyTarget","rotSelect","inputText","outputText","rotOptions","Array","keys","runCaesar","key","target","options","selectedIndex","value","textContent","clearFields","option","newOption","createElement","text","selected","add","addEventListener"],"mappings":"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","file":"js.ece4d53a.js","sourceRoot":"../src","sourcesContent":["const bottomBg = document.querySelector('.bottom-bg--js');\nconst screenWidth = window.outerWidth;\n\nbottomBg.setAttribute('width', `${screenWidth}`);\n","function caesar(input, rot) {\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError(\"It's not a String!\");\n\t}\n\tif (input.length < 1) {\n\t\tthrow new Error('The string is empty!');\n\t}\n\tconsole.log(input);\n\tconst inputArray = [\n\t\t...input\n\t];\n\tlet isUpperCase = false;\n\tlet isChar = false;\n\tconst result = [];\n\n\tinputArray.forEach(char => {\n\t\tif (char === char.toUpperCase()) isUpperCase = true;\n\t\tif (char.match(/[a-z]|[A-Z]/g)) isChar = true;\n\n\t\tif (isChar) {\n\t\t\tconst newChar = findNewChar(char, rot);\n\t\t\tisUpperCase ? result.push(newChar.toUpperCase()) : result.push(newChar);\n\t\t} else {\n\t\t\tresult.push(char);\n\t\t}\n\t\tisChar = false;\n\t\tisUpperCase = false;\n\t});\n\treturn result.join('');\n}\n\nfunction findNewChar(char, rot) {\n\t// prettier-ignore\n\tconst alphabet = [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' ];\n\tconst idx = alphabet.indexOf(char.toLowerCase());\n\tlet newIdx;\n\trot = +rot;\n\n\tif (idx + rot > alphabet.length - 1) {\n\t\tnewIdx = rot - (alphabet.length - idx);\n\t} else {\n\t\tnewIdx = idx + rot;\n\t}\n\treturn alphabet[newIdx];\n}\n\nmodule.exports = caesar;\n","import '../scss/style.scss';\nimport view from './view';\nimport caesar from './caesar';\n\nconst bodyTarget = document.querySelector('.body--js');\nconst rotSelect = document.querySelector('.rot-select--js');\nconst inputText = document.querySelector('.input-text--js');\nconst outputText = document.querySelector('.output-text--js');\nconst rotOptions = [\n\t...Array(26).keys()\n];\n\nrotOptions.forEach(option => {\n\tconst newOption = document.createElement('option');\n\tnewOption.value = option;\n\tnewOption.text = option;\n\tif (option === 13) newOption.selected = true;\n\trotSelect.add(newOption);\n});\n\nfunction runCaesar({ key, target }) {\n\tif (key === 'Enter' || (target !== inputText && target !== rotSelect)) {\n\t\tconst rot = rotSelect.options[rotSelect.selectedIndex].value;\n\n\t\tif (inputText.value !== '') {\n\t\t\toutputText.textContent = caesar(inputText.value, rot);\n\t\t\tinputText.value = '';\n\t\t}\n\t}\n}\n\nfunction clearFields() {\n\tinputText.value = '';\n\toutputText.textContent = '';\n}\n\ninputText.addEventListener('click', clearFields);\nbodyTarget.addEventListener('click', runCaesar);\ninputText.addEventListener('keyup', runCaesar);\n"]}